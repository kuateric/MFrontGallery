@DSL Default;
@Behaviour HypoplasticClayModelWrapper;
@Author Thomas Helfer;
@Date 11 / 02 / 2021;

@ModellingHypothesis Tridimensional;

// number of material properties
@IntegerConstant nmps = 22;
// number of state variables
@IntegerConstant nisvs = 16;

@MaterialProperty real mps[nmps];
@StateVariable real isvs[nisvs];

@Includes {
#include "MFrontUmatWrapper.hxx"
}

@LocalVariable StiffnessTensor K;

@Integrator {
  //
  const AbaqusRealType drot[9] = {1, 0, 0,  //
                                  0, 1, 0,  //
                                  0, 0, 1};
  const AbaqusIntegerType KSTEP[3u] = {0, 0, 0};
  // returned value
  AbaqusIntegerType KINC = 1;
  //
  const char name[81] =
      "Elasticity                              "  //
      "                                        ";
  //
  AbaqusRealType e[6];
  AbaqusRealType de[6];
  AbaqusRealType s[6];
  AbaqusRealType rdt = 1;
  //
  mfront_umat_wrapper::convertStrainToAbaqus<hypothesis>(e, &eto[0]);
  mfront_umat_wrapper::convertStrainToAbaqus<hypothesis>(de, &deto[0]);
  mfront_umat_wrapper::convertStressToAbaqus<hypothesis>(s, &sig[0]);
  for (ushort i = 0; i != 6; ++i) {
    // Pa->kPa
    s[i] *= 1e-3;
  }
  //
  const auto nprops = static_cast<AbaqusIntegerType>(nmps);
  const auto nstatv = static_cast<AbaqusIntegerType>(nisvs);
  const auto ntens = static_cast<AbaqusIntegerType>(6);
  const auto ndi = static_cast<AbaqusIntegerType>(3);
  const auto nshr = static_cast<AbaqusIntegerType>(3);
  const auto noel = static_cast<AbaqusIntegerType>(0);  // ??
  const auto npt = static_cast<AbaqusIntegerType>(0);   // ??

  //
  // unused variables
  AbaqusRealType sse, spd, scd, rpl;  // unused variables
  AbaqusRealType ddsddt[6];
  AbaqusRealType drplde[6];
  AbaqusRealType drpldt;
  AbaqusRealType time[2];
  AbaqusRealType pred[1] = {0};
  AbaqusRealType dpred[1] = {0};
  AbaqusRealType coords[3] = {0, 0, 0};
  const AbaqusRealType dfgrd0[9] = {1, 0, 0,  //
                                    0, 1, 0,  //
                                    0, 0, 1};
  const AbaqusRealType dfgrd1[9] = {1, 0, 0,  //
                                    0, 1, 0,  //
                                    0, 0, 1};
  AbaqusRealType celent;
  AbaqusIntegerType layer;
  AbaqusIntegerType kspt;
  //
  umat_hcea_(
      s,        /* stress                   */
      &isvs[0], /* &isvs[0], internal state variables */
      &K(0, 0), /* tangent operator         */
      &sse, &spd, &scd, &rpl, ddsddt, drplde, &drpldt, e, /* strain tensor    */
      de,                                                 /* strain increment */
      time,                                               //
      &dt,                                                /* time increment   */
      &T,                                                 /* temperature      */
      &dT,                       /* temperature increment    */
      pred,                      /* &esvs[0], external state variables */
      dpred,                     /* &desvs[0], external state variables */
      name, &ndi, &nshr, &ntens, /* number of components of tensors */
      &nstatv,                   /* number of internal state variables */
      &mps[0],                   /* material properties                   */
      &nprops,                   /* number of material properties */
      coords, drot,              /* rotation matrix                       */
      &rdt,                      /* estimation of the next time increment */
      &celent, dfgrd0, dfgrd1, &noel, &npt, &layer, &kspt, KSTEP, &KINC, 80);
  //
  mfront_umat_wrapper::convertStressFromAbaqus<hypothesis>(&sig[0], s);
  // kPa -> Pa
  sig *= 1e3;
  //
  if (rdt < 1) {
    return FAILURE;
  }
}

@TangentOperator {
  static_cast<void>(smt);
  mfront_umat_wrapper::convertStiffnessMatrixFromAbaqus<hypothesis>(&Dt(0, 0),
                                                                    &K(0, 0));
  // kPa -> Pa
  Dt *= 1e3;
}
